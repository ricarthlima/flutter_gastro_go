// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_gastro_go/test/features/restaurant/data/repositories/restaurant_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_gastro_go/features/restaurant/data/services/i_restaurant_service.dart'
    as _i3;
import 'package:flutter_gastro_go/features/restaurant/domain/entities/restaurant_dto.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeRestaurantDto_0 extends _i1.SmartFake implements _i2.RestaurantDto {
  _FakeRestaurantDto_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IRestaurantService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRestaurantService extends _i1.Mock
    implements _i3.IRestaurantService {
  @override
  _i4.Future<List<_i2.RestaurantDto>> getAll() =>
      (super.noSuchMethod(
            Invocation.method(#getAll, []),
            returnValue: _i4.Future<List<_i2.RestaurantDto>>.value(
              <_i2.RestaurantDto>[],
            ),
            returnValueForMissingStub:
                _i4.Future<List<_i2.RestaurantDto>>.value(
                  <_i2.RestaurantDto>[],
                ),
          )
          as _i4.Future<List<_i2.RestaurantDto>>);

  @override
  _i4.Future<_i2.RestaurantDto> getById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [id]),
            returnValue: _i4.Future<_i2.RestaurantDto>.value(
              _FakeRestaurantDto_0(this, Invocation.method(#getById, [id])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.RestaurantDto>.value(
              _FakeRestaurantDto_0(this, Invocation.method(#getById, [id])),
            ),
          )
          as _i4.Future<_i2.RestaurantDto>);
}
